{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/common/Forms/renderField.module.css","hok/withAuthRedirect.js","redux/dialogReducer.js","components/Profile/Profile.module.css","components/Profile/MyPosts/Posts/Post.module.css","assets/images/loading.svg","components/Sidebar/Sidebar.module.css","utils/validator/validator.js","components/Sidebar/Sidebar.js","components/News/News.js","components/Music/Music.js","redux/profileReducer.js","components/Profile/MyPosts/Posts/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileStatus.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/authReducer.js","components/Authentication/FormLoginContainer.js","components/Authentication/AuthenticationContainer.js","components/common/Forms/Forms.js","components/common/Menu/Menu.js","components/Header/Header.js","components/Header/HeaderContainer.js","redux/appReducer.js","redux/reduxStore.js","components/common/common.js","App.js","serviceWorker.js","index.js","api/api.js","components/common/Forms/renderField.js","util/helperUpdate.js","redux/usersReducer.js","components/common/Preloader/Preloader.js"],"names":["module","exports","mapStateToProps","state","isAuth","authentication","withAuthRedirect","Component","authRedirect","this","props","to","React","connect","initialState","dialogsData","id","name","messageData","message","newMessageText","sendMessage","text","type","dialogReducer","action","newMsn","required","value","undefined","maxLength","max","length","maxLength10","maxLength50","Sidebar","className","style","sidebar","item","activeClassName","activeLink","News","Music","SET_NEW_POST","SET_USER_PROFILE","postData","like","userProfile","setUserProfile","profile","profileReducer","newPost","newText","Post","css","src","ReduxNewPostForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","MyPosts","postsData","setNewPost","data","map","post","key","myPosts","MyPostsContainer","newPostText","profilePage","Status","editMode","status","activateEditMode","setState","onStatusChange","ReduxStatusForm","onDoubleClick","Input","autoFocus","ProfileInfo","user","descriptionBlock","updated","photoUrl","firstName","lastName","location","Profile","Preloader","ProfileContainer","match","params","userId","getUserById","authUser","prevProps","prevState","snapshot","PureComponent","compose","isFetching","usersPage","token","dispatch","a","toggleIsFetch","Api","responseStatus","resultCode","payload","withRouter","setAuthUser","login","username","password","rememberMe","stopSubmit","_error","authReducer","LoginReduxForm","Form","Group","controlId","Label","Control","as","Text","error","Alert","variant","Check","label","Button","FormLoginContainer","AuthenticationApiContainer","AuthenticationContainer","SearchForm","inline","FormControl","MainMenu","Nav","Link","NavLink","AuthenticationHeaderMenu","logout","Dropdown","alignRight","Toggle","height","width","Menu","ItemText","Divider","onClick","Header","memo","Navbar","collapseOnSelect","expand","bg","Container","fluid","Brand","aria-controls","Collapse","HeaderRenderContainer","HeaderContainer","initialize","appReducer","reducers","combineReducers","dialogPage","usersReducer","reduxFormReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","UsersContainer","App","initialized","Row","Col","xs","lg","path","render","AppContainer","getAuthProfile","checkLogin","response","Promise","all","MyApp","StrictMode","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","instance","axios","create","withCredentials","responseType","baseURL","log","Cookies","remove","get","getUsers","page","size","renderField","TagName","input","meta","touched","warning","hasError","hasWarning","styles","fieldRender","updateObjectInArray","array","paramName","newObjectParam","u","FOLLOW","UNFOLLOW","SET_USERS","users","pageSize","totalPages","currentPage","follow","unfollow","setCurrentPage","loadUsers","content","followed","preloader"],"mappings":"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","file":"static/js/main.1f178da3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14O2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldRender\":\"renderField_fieldRender__1ZRSn\",\"error\":\"renderField_error__1EyVG\"};","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = state => {\n    return {\n        isAuth: state.authentication.isAuth\n    };\n}\n\nexport const withAuthRedirect = (Component) => {\n    class authRedirect extends React.Component{\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\n\n            return <Component {...this.props}/>;\n        }\n    }\n\n    let ConnectAuthRedirect = connect(mapStateToProps)(authRedirect)\n\n    return ConnectAuthRedirect;\n}","const ADD_MESSAGE = \"ADD-MESSAGE\";\n\nlet initialState = {\n    dialogsData: [\n        {id: 1, name: 'Sergey'},\n        {id: 2, name: 'Sveta'},\n        {id: 3, name: 'Natasha'},\n        {id: 4, name: 'Petra'},\n        {id: 5, name: 'Vitya'},\n        {id: 6, name: 'Kolya'}\n    ],\n    messageData: [\n        {id: 1, message: 'hi'},\n        {id: 2, message: 'my name is petra'},\n        {id: 3, message: 'yo'}\n    ],\n    newMessageText: ''\n}\n\nconst dialogReducer = (state = initialState, action) => {\n    switch (action.type){\n        case ADD_MESSAGE:\n            let newMsn = {\n                id: 4,\n                message: action.text\n            };\n            return {\n                ...state,\n                messageData: [...state.messageData, newMsn],\n                newMessageText: \"\"\n            };\n        default:\n            return state;\n    }\n}\n\nexport const sendMessage = (text) =>\n    ({type: ADD_MESSAGE, text});\n\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Profile_banner__2Yg2C\",\"descriptionBlock\":\"Profile_descriptionBlock__3qLia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1d730\"};","module.exports = __webpack_public_path__ + \"static/media/loading.a38cd8d3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2WupE\",\"item\":\"Sidebar_item__3zPF1\",\"activeLink\":\"Sidebar_activeLink__1lvgz\"};","export const required = value => {\n    return value ? undefined : 'Required'\n}\n\nconst maxLength = max => value => {\n    return value && value.length > max ? `Must be ${max} characters or less` : undefined\n}\n\nexport const maxLength10 = maxLength(10);\nexport const maxLength50 = maxLength(50);","import React from 'react';\nimport style from './Sidebar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Sidebar = () => {\n    return (\n    <nav className={style.sidebar}>\n        <div className={style.item}>\n            <NavLink to='/profile' activeClassName={style.activeLink} >Profile</NavLink>\n        </div>\n        <div className={style.item}>\n            <NavLink to='/dialogs' activeClassName={style.activeLink}>Message</NavLink>\n        </div>\n        <div className={style.item}>\n            <NavLink to='/allusers' activeClassName={style.activeLink}>All Users</NavLink>\n        </div>\n        <div className={style.item}>\n            <NavLink to='/news' activeClassName={style.activeLink}>News</NavLink>\n        </div>\n        <div className={style.item}>\n            <NavLink to='/music' activeClassName={style.activeLink}>Music</NavLink>\n        </div>\n    </nav>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport css from './News.module.css';\n\nconst News = () => {\n    return (\n        <div>\n            This is News Page!\n        </div>\n    );\n}\n\nexport default News;","import React from 'react';\nimport css from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div>\n            This is Music Page!\n        </div>\n    );\n}\n\nexport default Music;","import Api from \"../api/api\";\nimport {toggleIsFetch} from \"./usersReducer\";\n\nconst SET_NEW_POST = \"PROFILE_REDUCER/SET_NEW_POST\";\nconst SET_USER_PROFILE = \"PROFILE_REDUCER/SET_USER_PROFILE\";\n\nlet initialState = {\n    postData: [\n        {id: 1, text: 'My first post', like: 20},\n        {id: 2, text: 'My second post', like: 30}\n    ],\n    userProfile: null\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_NEW_POST:\n            let newPost = {\n                id: 5,\n                text: action.newText,\n                like: 0\n            };\n            return {\n                ...state,\n                postData: [...state.postData, newPost],\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                userProfile: action.profile\n            };\n        default:\n            return state;\n    }\n}\n\nexport const setNewPost = (newText) =>\n    ({type: SET_NEW_POST, newText});\n\nexport const setUserProfile = (profile) =>\n    ({type: SET_USER_PROFILE, profile});\n\nexport const getUserById = (id) => async (dispatch) => {\n\n    dispatch(toggleIsFetch(true));\n\n    let data = (await Api.getUserById(id)).data;\n\n    if (data.responseStatus.resultCode === 200) {\n        dispatch(setUserProfile(data.payload));\n    }\n    dispatch(toggleIsFetch(false));\n}\n\nexport default profileReducer;","import React from 'react';\nimport css from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={css.item}>\n            <img src='https://windows10free.ru/uploads/posts/2017-04/1493287748_1487679899_icon-user-640x640.png'/>\n            {props.text}\n            <div>\n                <span>{props.like} like</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport css from './MyPosts.module.css';\nimport Post from \"./Posts/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/Forms/renderField\";\nimport {maxLength50, required} from \"../../../utils/validator/validator\";\n\nconst MyPosts = ({postsData, setNewPost}) => {\n\n    let data = postsData\n        .map(post => (<Post text={post.text} like={post.like} key={post.id}/>))\n\n    let onAddNewPost = (data) => {\n        setNewPost(data.text);\n    }\n\n    return (\n        <div className={css.myPosts}>\n            <ReduxNewPostForm onSubmit={onAddNewPost}/>\n            <div className={css.myPosts}>\n                {data}\n            </div>\n        </div>\n    );\n}\n\nconst NewPostForm = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field\n                component={Textarea}\n                name={'text'}\n                placeholder='Text'\n            validate={[required, maxLength50]}/>\n            <button>Add Post</button>\n        </form>\n    )\n}\n\nconst ReduxNewPostForm = reduxForm({form: 'newPostForm'})(NewPostForm);\n\nexport default MyPosts;","import React from 'react';\nimport {setNewPost} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return {\n        newPostText: state.profilePage.newPostText,\n        postsData: state.profilePage.postData,\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,\n    {setNewPost})(MyPosts);\n\nexport default MyPostsContainer;","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLength10, required} from \"../../utils/validator/validator\";\nimport {Input} from \"../common/Forms/renderField\";\n\nexport default class Status extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    onStatusChange = (data) => {\n        this.setState({\n            status: data.status,\n            editMode: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.editMode\n                    ? <ReduxStatusForm onSubmit={this.onStatusChange} status={this.state.status}/>\n                    : <div>\n                        <span onDoubleClick={this.activateEditMode}>{this.state.status}</span>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nconst StatusForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                component={Input}\n                name={'status'}\n                autoFocus={true}\n                value={'props.status'}\n                validate={[required, maxLength10]}/>\n            <button>OK</button>\n        </form>\n    )\n}\n\nconst ReduxStatusForm = reduxForm({form: 'statusForm'})(StatusForm);","import React from 'react';\nimport style from './Profile.module.css';\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport Status from \"./ProfileStatus\"\n\nconst Profile = ({userProfile}) => {\n    if (!userProfile) return <Preloader/>;\n    return (\n        <div>\n            <ProfileInfo user={userProfile}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nconst ProfileInfo = ({user}) => {\n    return (\n        <div>\n            <div className={style.descriptionBlock}>\n                <div>Last updated: {user.updated}</div>\n                <img src={user.photoUrl}/>\n                <div>\n                    <Status status={'MyStatus'}/>\n                </div>\n                <div>{user.firstName} {user.lastName}</div>\n                <div>{user.location}</div>\n                <div>{user.status}</div>\n\n                <div>\n                    description\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getUserById, setUserProfile} from \"../../redux/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hok/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.PureComponent {\n\n    componentDidMount() {\n        if (this.props.match.params.userId !== undefined) {\n            this.props.getUserById(this.props.match.params.userId);\n        } else if (this.props.authUser !== null) {\n            this.props.setUserProfile(this.props.authUser)\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId === undefined) {\n            this.props.setUserProfile(this.props.authUser)\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} />\n        );\n    }\n}\n\nlet mapStateToProps = state => {\n\n    return {\n        userProfile: state.profilePage.userProfile,\n        isFetching: state.usersPage.isFetching,\n        token: state.authentication.token,\n        authUser: state.authentication.user,\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps,\n        {setUserProfile, getUserById}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n","import Api from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_AUTH_USER = 'SET_AUTH_USER';\nconst DEL_AUTH_USER = 'DEL_AUTH_USER';\n\nlet initialState = {\n    user: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER:\n            return {\n                user: action.user,\n                isAuth: true\n            };\n        case DEL_AUTH_USER:\n            return {\n                user: null,\n                isAuth: false\n            };\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUser = (user) => ({type: SET_AUTH_USER, user});\nexport const delAuthUser = () => ({type: DEL_AUTH_USER});\n\nexport const login = (username, password, rememberMe) => async (dispatch) => {\n\n    let data = (await Api.login(username, password))?.data\n\n    if (data === undefined) {\n        dispatch(stopSubmit(\"login\", {_error: \"Server not responding. Please try again later\"}))\n        return;}\n\n    if (data.payload !== undefined &&\n        data.responseStatus.resultCode === 200)\n\n        dispatch(setAuthUser(data.payload));\n    else\n        dispatch(stopSubmit(\"login\", {_error: data.responseStatus.message}))\n}\n\nexport const checkLogin = () => async (dispatch) => {\n    let response = await Api.checkLogin();\n    let data = response?.data;\n    if (data !== undefined && data.payload !== undefined)\n        dispatch(setAuthUser(data.payload));\n    return response;\n}\n\nexport const logout = () => (dispatch) => {\n    Api.logout();\n    dispatch(delAuthUser());\n}\n\nexport default authReducer;","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/Forms/renderField\";\nimport {maxLength10, required} from \"../../utils/validator/validator\";\nimport {Alert, Button, Form} from \"react-bootstrap\";\n\nconst FormLoginContainer = (props) => {\n\n    const onLogin = (data) => {\n        props.login(data.username, data.password, data.rememberMe)\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onLogin}/>\n        </div>\n    );\n}\n\nconst FormLogin = (props) => {\n\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <Form.Group controlId=\"formBasicLogin\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control as={Field}\n                              type=\"text\"\n                              component={Input}\n                              name={\"username\"}\n                              placeholder={\"Please enter Username\"}\n                              validate={[required, maxLength10]}/>\n                <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control as={Field}\n                              type={\"password\"}\n                              component={Input}\n                              name={\"password\"}\n                              placeholder={\"Please enter password\"}\n                              validate={[required, maxLength10]}/>\n            </Form.Group>\n\n            {\n                props.error && <Form.Group controlId=\"formBasicError\">\n                    <Alert variant=\"danger\">\n                        {props.error}\n                    </Alert>\n                </Form.Group>\n            }\n\n\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check\n                    type=\"checkbox\"\n                    label=\"Remember me\"\n                />\n            </Form.Group>\n\n            <Button\n                className=\"float-right\"\n                variant=\"primary\"\n                type=\"submit\">\n                Sign in\n            </Button>\n        </Form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(FormLogin);\n\n\nexport default FormLoginContainer;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport FormLoginContainer from \"./FormLoginContainer\";\nimport {Redirect} from \"react-router-dom\";\n\nexport class AuthenticationApiContainer extends React.Component {\n\n    render() {\n        return this.props.isAuth\n            ? <Redirect to={'/profile'}/>\n            : (\n                <div>\n                    <FormLoginContainer login={this.props.login}/>\n                </div>\n            );\n    }\n}\n\nlet mapStateToProps = state => {\n\n    return {\n        user: state.authentication.user,\n        isAuth: state.authentication.isAuth\n    }\n};\n\nconst AuthenticationContainer = connect(mapStateToProps, {login})(AuthenticationApiContainer);\n\nexport default AuthenticationContainer;\n","import {Button, Form, FormControl} from \"react-bootstrap\";\nimport React from \"react\";\n\nexport let SearchForm = (props) => {\n    return (\n        <Form inline>\n            <FormControl\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n            />\n            <Button variant=\"light\" >Search</Button>\n        </Form>\n    );\n}","import {Button, Dropdown, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\nimport FormLoginContainer from \"../../Authentication/FormLoginContainer\";\n\n\nexport let MainMenu = (props) => {\n    return(\n        <Nav className=\"mr-auto\">\n            <Nav.Link as={NavLink} to={\"/\"}>Home</Nav.Link>\n            <Nav.Link as={NavLink} to={\"/profile\"}>Profile</Nav.Link>\n            <Nav.Link as={NavLink} to={\"/allUsers\"}>Users</Nav.Link>\n        </Nav>\n    );\n\n}\n\nexport let AuthenticationHeaderMenu = ({login, logout, isAuth, user}) => {\n\n    const onLogout = () => {\n        logout();\n    }\n\n    return(\n        <Dropdown alignRight className=\"ml-5\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                {isAuth\n                    ? (\n                        <>\n                            <img\n                                className=\"d-inline-block align-top\"\n                                src={user?.photoUrl}\n                                height=\"22\"\n                                width=\"22\"/>\n                            {user?.firstName}\n                        </>\n                    ) :\n                    (\"Sign in\")}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"dropdown-menu-login\">\n                {isAuth\n                    ? (\n                        <>\n                            <Dropdown.ItemText>\n                                Signed in as {user?.firstName}\n                            </Dropdown.ItemText>\n                            <Dropdown.Divider/>\n                            <Dropdown.ItemText className=\"float-right\">\n                                <Button onClick={onLogout}\n                                        className=\"float-right\"\n                                        variant=\"primary\">\n                                    Sign out\n                                </Button>\n                            </Dropdown.ItemText>\n                        </>\n                    )\n                    : (\n                        <Dropdown.ItemText>\n                            <FormLoginContainer login={login}/>\n                        </Dropdown.ItemText>\n                    )}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {Container, Navbar} from \"react-bootstrap\";\nimport {SearchForm} from \"../common/Forms/Forms\";\nimport {AuthenticationHeaderMenu, MainMenu} from \"../common/Menu/Menu\";\n\nconst Header = React.memo((props) => {\n\n    return (\n        <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n            <Container fluid>\n                <Navbar.Brand as={NavLink} to={\"/\"}>\n                    Perfume SiS\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <MainMenu/>\n                    <SearchForm/>\n                    <AuthenticationHeaderMenu {...props} />\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n})\n\nexport default Header;","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {login, logout} from \"../../redux/authReducer\";\n\nclass HeaderRenderContainer extends React.PureComponent {\n\n\n    render() {\n        return (\n            <div>\n                <Header {...this.props}/>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = state => {\n    return {\n        user: state.authentication.user,\n        isAuth: state.authentication.isAuth\n    };\n}\n\nconst HeaderContainer = connect(mapStateToProps, {logout, login})(HeaderRenderContainer);\n\nexport default HeaderContainer;","import {checkLogin} from \"./authReducer\";\n\nconst INITIALIZED = \"INITIALIZED\";\n\nlet initialState = {\n    initialize: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED:\n            return {\n                ...state,\n                initialize: true\n            };\n        default:\n            return state;\n    }\n}\n\nexport const setInitialized = () => ({type: INITIALIZED});\n\nexport const initialized = () => async (dispatch) => {\n    let getAuthProfile = dispatch(checkLogin())\n\n    await Promise.all([getAuthProfile])\n\n    dispatch(setInitialized())\n}\n\n\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profileReducer\";\nimport dialogReducer from \"./dialogReducer\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./authReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as reduxFormReducer } from 'redux-form';\nimport appReducer from \"./appReducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogPage: dialogReducer,\n    usersPage: usersReducer,\n    userProfile: profileReducer,\n    authentication: authReducer,\n    form: reduxFormReducer,\n    app: appReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n//const store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n\nwindow.__store__ = store;","import React, {Suspense} from \"react\";\n\nexport const withSuspense = (Component) => (props) => {\n    return <Suspense fallback={<div>Loading...</div>}>\n        <Component {...props}/>\n    </Suspense>\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport AuthenticationContainer from \"./components/Authentication/AuthenticationContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {connect, Provider} from \"react-redux\";\nimport {initialized} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/reduxStore\";\nimport {withSuspense} from \"./components/common/common\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/AllUsers/UsersContainer\"));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initialized();\n    }\n\n    render() {\n        if (!this.props.initialize) return <Preloader/>\n        return (\n            <HashRouter>\n                <Container fluid>\n                    <Row>\n                        <Col className=\"p-0\">\n                            <HeaderContainer/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs lg={2} className=\"p-0\">\n                            <Sidebar/>\n                        </Col>\n                        <Col className=\"p-0\">\n                            <Route path='/profile/:userId?'\n                                   render={() => <ProfileContainer/>}\n                            />\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}\n                            />\n                            <Route path='/allusers'\n                                   render={withSuspense(UsersContainer)}\n                            />\n                            <Route path='/news' component={News}/>\n                            <Route path='/music' component={Music}/>\n                            <Route path='/login'\n                                   render={() => <AuthenticationContainer/>}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </HashRouter>\n        );\n    }\n}\n\nlet mapStateToProps = state => {\n    return {\n        initialize: state.app.initialize\n    };\n}\n\nconst AppContainer = connect(mapStateToProps, {initialized})(App);\n\nlet MyApp = () => {\n    return (\n        <React.StrictMode>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </React.StrictMode>\n    )\n}\n\nexport default MyApp;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/reduxStore\";\nimport {Provider} from \"react-redux\";\nimport MyApp from \"./App\";\n\nReactDOM.render(\n    <MyApp/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    responseType: 'application/json',\n    baseURL: 'http://localhost:8080/api'\n})\n\nconst apiVersion = '/v1'\n\nconst Api = {\n\n    login(username, password) {\n        return instance.post(`/auth/login`, { username, password })\n            .catch(error => {\n                console.log(error)\n            })\n    },\n\n    logout() {\n        const cookies = new Cookies();\n        cookies.remove('token_api')\n    },\n\n    checkLogin() {\n        return instance.get(`/auth`)\n            .catch(error => {\n                console.log(\"ERROR: checkLogin in api.js\")\n            })\n    },\n\n    getUsers(page, size) {\n        return instance.get(`${apiVersion}/admin/customers?page=${page}&size=${size}`)\n    },\n\n    getUserById(id) {\n        return instance.get(`${apiVersion}/admin/customers/${id}`);\n    }\n}\n\nexport default Api;","import React from \"react\";\nimport styles from \"./renderField.module.css\"\n\nconst renderField = TagName => ({\n                          input, label,\n                          meta: {touched, error, warning}, ...props\n                      }) => {\n    const hasError = touched && error;\n    const hasWarning = touched && error;\n    return (\n        <div className={styles.fieldRender + \" \" + (hasError ? styles.error : \"\") }>\n            <div>{label}</div>\n            <div>\n                <TagName label={label} {...input} {...props}/>\n            </div>\n            <div>\n                {(hasError && <span>{error}</span>) || (hasWarning && <span>{warning}</span>)}\n            </div>\n        </div>\n    )\n}\n\nexport const Textarea = renderField('textarea')\nexport const Input = renderField('input')","export const updateObjectInArray = (array, paramName, value, newObjectParam) => {\n    let newArray = array.map(u => {\n        if (u[paramName] === value)\n            return {...u, ...newObjectParam}\n        return u;\n    })\n    return newArray;\n}","import Api from \"../api/api\";\nimport {updateObjectInArray} from \"../util/helperUpdate\";\n\nconst FOLLOW = 'USER_REDUCER/FOLLOW';\nconst UNFOLLOW = 'USER_REDUCER/UNFOLLOW';\nconst SET_USERS = 'USER_REDUCER/SET_USERS';\nconst SET_CURRENT_PAGE = 'USER_REDUCER/SET_CURRENT_PAGE';\nconst SET_TOTAL_PAGES = 'USER_REDUCER/SET_TOTAL_PAGES';\nconst TOGGLE_IS_FETCH = 'USER_REDUCER/TOGGLE_IS_FETCH';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalPages: 0,\n    currentPage: 1,\n    isFetching: false\n\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(\n                    state.users, \"id\", action.userId, {followed: true})\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(\n                    state.users, \"id\", action.userId, {followed: false})\n            };\n        case SET_USERS:\n            return {\n                ...state, users: action.users\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state, currentPage: action.page\n            }\n        case SET_TOTAL_PAGES:\n            return {\n                ...state, totalPages: action.totalPages\n            }\n        case TOGGLE_IS_FETCH:\n            return {\n                ...state, isFetching: action.isFetching\n            }\n        default:\n            return state;\n    }\n}\n\nexport const follow = (userId) => ({type: FOLLOW, userId});\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page});\nexport const setTotalPages = (totalPages) => ({type: SET_TOTAL_PAGES, totalPages});\nexport const toggleIsFetch = (isFetching) => ({type: TOGGLE_IS_FETCH, isFetching});\n\nexport const loadUsers = (page, size) => async (dispatch) => {\n    dispatch(toggleIsFetch(true));\n    dispatch(setCurrentPage(page));\n\n    let data = (await Api.getUsers(page, size)).data;\n\n    dispatch(setUsers(data.payload.content));\n    dispatch(setTotalPages(data.payload.totalPages));\n    dispatch(toggleIsFetch(false));\n}\n\n\nexport default usersReducer;\n","import React from \"react\";\nimport preloader from \"../../../assets/images/loading.svg\";\n\nlet Preloader = () => {\n    return (\n        <div>\n            <img src={preloader}/>\n        </div>\n    )\n}\n\nexport default Preloader;"],"sourceRoot":""}